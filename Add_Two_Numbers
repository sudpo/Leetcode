/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        if(l1 == NULL || l2 == NULL) {
            return l1 == NULL ? l2 : l1;
        }
        
        int carry = 0;
        ListNode *dummy = new ListNode(0);
        ListNode *head = dummy;
        while(l1 != NULL && l2 != NULL) {
            int value = l1->val + l2->val + carry;
            carry = value / 10;
            value %= 10;
            head -> next = new ListNode(value);
            head = head->next;
            l1 = l1->next;
            l2 = l2->next;
        }
        while(l1 != NULL) {
            int value = l1->val + carry;
            carry = value /10;
            value %= 10;
            head -> next = new ListNode(value);
            head = head->next;
            l1 = l1->next;
        }
        while(l2 != NULL) {
            int value = l2->val + carry;
            carry = value /10;
            value %= 10;
            head -> next = new ListNode(value);
            head = head->next;
            l2 = l2->next;
        }
        if(carry != 0){
            head -> next = new ListNode(carry);
        }
        
        return dummy->next;
    }
};
