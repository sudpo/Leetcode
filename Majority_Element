O(nlogn)


class Solution {
public:
    int majorityElement(vector<int>& nums) {
        int n = nums.size();
        if(n == 0) {
            return 0;
        }
        if(n == 1) {
            return nums[0];
        }
        
        sort(nums.begin(), nums.end());
        int count = 1;
        for(int i = 1; i < n; ++i) {
            if(nums[i] == nums[i-1]){
                count++;
                if(count > n/2) {
                    return nums[i];
                }
            }
            else{
                count = 1;
            }
        }
        
    }
};

O(n)

class Solution {
public:
    int majorityElement(vector<int>& nums) {
        int n = nums.size();
        if(n == 0) {
            return 0;
        }
        int res = nums[0];
        int count = 1;
        for(int i = 1; i < n; ++i) {
            if(count == 0) {
                count++;
                res = nums[i];
            }
            else if(nums[i] == res) {
                count++;
            }
            else{
                count--;
            }
        }
        
        return res;
        
    }
};
