/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrderBottom(TreeNode* root) {
        vector<vector<int> > result;
        if(root == NULL)  return  result;
        queue<TreeNode *> helper;
        helper.push(root);
        while(helper.size() != 0) {
            int size = helper.size();
            vector<int> solution;
            for(int i = 0; i < size; ++i) {
                TreeNode *temp = helper.front();
                helper.pop();
                solution.push_back(temp->val);
                if(temp->left != NULL) {
                    helper.push(temp->left);
                }
                if(temp->right != NULL) {
                    helper.push(temp->right);
                }
           }
           result.push_back(solution);
        }
        reverse(result.begin(), result.end());
        return result;
        
    }
};
