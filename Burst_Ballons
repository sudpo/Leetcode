class Solution {
public:
    int maxCoins(vector<int>& nums) {
        int n = nums.size();
        if(n == 0) {
            return 0;
        }
        
        // add boundary 
        nums.insert(nums.begin(), 1);
        nums.insert(nums.end(), 1);
        
        // dp[i][j] means the max coins we can get if we burst ballons within nums[i][j];
        vector<vector<int> > dp(nums.size(), vector<int>(nums.size(), 0));
        
        // 从小长度求大长度
        for(int len = 1; len <= n; ++len){
            for(int left = 1; left <= n-len+1; ++left){
                int right = left + len -1;
                for(int k = left; k <= right; ++k) {
                    //转移方程理解： 当第K个气球是最后一个爆的时候 他的左右边界是确定的 LEFT-1, RIGHT+1, 然后在分别加上左边和右边的最大值
                    dp[left][right] = max(dp[left][right], nums[left-1]*nums[k]*nums[right+1] + dp[left][k-1] + dp[k+1][right]);
                }
            }
        }
        return dp[1][n];
    }
};
