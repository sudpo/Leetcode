class Solution {
public:
    vector<int> topKFrequent(vector<int>& nums, int k) {
        vector<int> res;
        unordered_map<int, int> hash;
        for(int i = 0; i< nums.size(); ++i){
            hash[nums[i]]++;
        }
        
        priority_queue<pair<int,int> > pq;
        for(auto it = hash.begin(); it != hash.end(); ++it){
            pq.push(make_pair(it->second, it->first));
            if(pq.size() > hash.size() - k) {
                res.push_back(pq.top().second);
                pq.pop();
            }
        }
        return res;
    }
};
