class Solution {
public:
    int maximalSquare(vector<vector<char>>& matrix) {
        int n = matrix.size();
        if(n == 0) {
            return 0;
        }
        int m = matrix[0].size();
        if(m == 0) {
            return 0;
        }
        
        vector<vector<int > > dp(n, vector<int> (m, 0));
        
        int maxRes = 0;
        
        if(matrix[0][0] == '1') {
            dp[0][0] = 1;
            maxRes = 1;
        }
        
        for(int i = 1 ; i < n; ++i) {
            if(matrix[i][0] == '1' ){
                dp[i][0] = 1;
                maxRes = 1;
            }
        }
        
        for(int j = 1; j < m; ++j) {
            if(matrix[0][j] == '1'){
                dp[0][j] = 1;
                maxRes = 1;
            }
        }
        
        for(int i = 1; i < n; ++i) {
            for(int j = 1; j < m; ++j) {
                if(matrix[i][j] == '1'){
                    dp[i][j] = min(min(dp[i-1][j],dp[i][j-1]), dp[i-1][j-1]) + 1;
                    maxRes = max(maxRes, dp[i][j]);
                }
            }
        }
        return maxRes * maxRes;
    }
};
