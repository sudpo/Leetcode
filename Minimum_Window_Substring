https://leetcode.com/discuss/72701/here-10-line-template-that-can-solve-most-substring-problems
1. Use two pointers: start and end to represent a window.
2. Move end to find a valid window.
3. When a valid window is found, move start to find a smaller window.

class Solution {
public:
    string minWindow(string s, string t) {
        int sn = s.size();
        int tn = t.size();
        string result;
        if(sn < tn) {
            return result;
        }
        
        unordered_map<char, int> charMap;
        for(int i = 0; i < tn; ++i){
            charMap[t[i]]++;
        }
        
        int minLen = INT_MAX;
        int start = 0; 
        int end = 0;
        int minStart = 0;
        int counter=t.size();
        
        while(end < sn){
            if(charMap[s[end]] > 0) {
                counter--;
            }
            charMap[s[end]]--;
            end++;
            while(counter == 0) {
                if(end - start < minLen) {
                    minStart = start;
                    minLen = end-start;
                }
                charMap[s[start]]++;
                if(charMap[s[start]] > 0) {
                    counter++;
                }
                start++;
            }
        }
        if(minLen != INT_MAX){
            return s.substr(minStart, minLen);
        }
        return result;
        
        
        
        
    }
};
