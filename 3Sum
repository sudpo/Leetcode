class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        vector<vector<int> > res;
        int n = nums.size();
        if(n < 3) {
            return res; 
        }
        
        sort(nums.begin(), nums.end());
        
        for(int i = 0; i < n -2; ++i) {
            if(nums[i] > 0) {
                break;
            }
            if(i != 0 && nums[i] == nums[i-1]) {
                continue;
            }
            
            int start = i + 1;
            int end = n - 1;
            while(start < end) {
                if(nums[end] < 0) {
                    break;
                }
                int total = nums[i] + nums[start] + nums[end];
                if(total == 0) {
                    vector<int> solution;
                    solution.push_back(nums[i]);
                    solution.push_back(nums[start]);
                    solution.push_back(nums[end]);
                    res.push_back(solution);
                    start++;
                    end--;
                    while(start < end){
                        if(nums[start] != nums[start-1]){
                            break;
                        }
                        else{
                            start++;
                        }
                    }
                    
                    while(start < end){
                        if(nums[end] != nums[end+1]){
                            break;
                        }
                        else{
                            end--;
                        }
                    }
                }
                if(total < 0 ) {
                    start++;
                }
                if(total > 0 ) {
                    end--;
                }
            }
        }
        
        return res;
        
    }
};
