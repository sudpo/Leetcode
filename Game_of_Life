/*00: 死->死
  10: 死->活
  01: 活->死
  11: 活->活*/



class Solution {
public:
    void gameOfLife(vector<vector<int>>& board) {
        int n = board.size();
        if(n == 0) {
            return;
        }
        int m = board[0].size();
        if(m == 0) {
            return;
        }
        
        int d[][2] = {{1,-1},{1,0},{1,1},{0,-1},{0,1},{-1,-1},{-1,0},{-1,1}};
        for(int i = 0; i < n; ++i) {
            for(int j = 0; j < n; ++j) {
                int live = 0;
                for(int k = 0; k < 8; ++k) {
                    int x= d[k][0] + i;
                    int y = d[k][1] + j;
                    if(x < 0 || x >= n || y< 0 || y >= m){
                        continue;
                    }
                    if(board[x][y] & 1){
                        live++;
                    }
                }
                if(board[i][j] == 0) {
                    if(live == 3){
                        board[i][j] = 2;
                    }
                }else {
                    if(live < 2 || live > 3) {
                        board[i][j] = 1;
                    }else{
                        board[i][j] = 3;
                    }
                }
            }
        }
        for(int i = 0; i < n; ++i) {
            for(int j = 0; j < m; ++j) {
                board[i][j] >>= 1;
            }
        }
        
    }
};
