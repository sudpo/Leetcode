/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {
        if(headA == NULL || headB == NULL) {
            return NULL;
        }
        
        ListNode *head = headA;
        int lenA = 0;
        while(head != NULL) {
            head = head->next;
            lenA++;
        }
        head = headB;
        int lenB = 0;
        while(head != 0) {
            head = head->next;
            lenB++;
        }
        int diff = abs(lenA-lenB);
        if(lenA >= lenB) {
            while(diff > 0) {
                headA = headA->next;
                diff--;
            }
        }
        else{
            while(diff > 0)  {
                headB = headB->next;
                diff--;
            }
        }
        while(headA != NULL && headB != NULL && headA != headB){
            headA = headA->next;
            headB = headB->next;
        }
        if(headA == NULL || headB == NULL) {
            return NULL;
        }
        else{
            return headA;
        }
        
    }
};
