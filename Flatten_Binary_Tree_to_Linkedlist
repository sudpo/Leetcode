/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    void flatten(TreeNode* root) {
        if(!root) {
            return;
        }
        flatten(root->left);
        flatten(root->right);
        
        TreeNode *tmp = root->right;
        
        root->right = root->left;
        
        root->left = NULL;
        
        while(root->right){
            root = root->right;
        }
        
        root->right = tmp;
    }
    
};


/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    void flatten(TreeNode* root) {
        TreeNode *cur = root;
        while(cur != NULL) {
            if(cur->left != NULL){
                TreeNode *pre = cur->left;
                while(pre->right != NULL) {
                    pre = pre->right;
                }
                pre->right = cur->right;
                cur->right = cur->left;
                cur->left = NULL;
            }
            cur = cur->right;
        }
        
    }
};
