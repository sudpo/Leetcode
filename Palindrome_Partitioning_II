class Solution {
public:
    int minCut(string s) {
        int n = s.size();
        if(n == 0) {
            return 0;
        }
        
        vector<vector<bool > > pal(n, vector<bool> (n, false));
        vector<int> dp(n, 0);
        for(int i = 0; i < n; ++i) {
            pal[i][i] = true;
            dp[i] = i;
        }
        for(int i = 1; i < n; ++i) {
            for(int j = 0; j <= i; ++j) {
                if(s[j] == s[i]) {
                    if(i-j >=2 ) {
                        pal[j][i] = pal[j+1][i-1];
                    }
                    else{
                        pal[j][i] = true;
                    }
                    
                    if(pal[j][i]){
                        if(j == 0) {
                        dp[i] = 0;
                        }
                        else{
                            dp[i] = min(dp[i], dp[j-1] + 1);
                        }
                    }
                }
            }
        }
        
     /*   for(int i = 1; i < n; ++i) {
            for(int j = 0; j <= i; ++j) {
                if(pal[j][i]){
                    if(j == 0) {
                        dp[i] = 0;
                    }
                    else{
                        dp[i] = min(dp[i], dp[j-1] + 1);
                    }
                }
            }
        }*/
        return dp[n-1];
    }
};
