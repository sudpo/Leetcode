/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* mergeKLists(vector<ListNode*>& lists) {
        if(lists.size() == 0 ){
            return NULL;
        }
        
        while(lists.size() > 1) {
            lists.push_back(merge2Lists(lists[0], lists[1]));
            lists.erase(lists.begin());
            lists.erase(lists.begin());
        }
        return lists[0];
    }
    
    ListNode* merge2Lists(ListNode *list1, ListNode *list2){ {
        if(list1 == NULL || list2 == NULL) {
            return list1 == NULL ? list2 : list1;
        }
        
        ListNode *dummy = new ListNode(0);
        ListNode *pre = dummy;
        while(list1 != NULL && list2 != NULL) {
            if(list1->val < list2->val) {
                pre->next = list1;
                list1 = list1->next;
                pre = pre->next;
            }else{
                pre->next = list2;
                list2 = list2->next;
                pre = pre->next;
            }
        }
        if(list1 == NULL) {
            pre->next = list2;
        }else{
            pre->next = list1;
        }
        return dummy->next;
        
    }
        
    }
};
