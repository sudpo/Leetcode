class Queue {
    stack<int> s1;
    stack<int> s2;
    
    void move(stack<int> &s1, stack<int> &s2){
        while(s2.size() != 0) {
            int temp = s2.top();
            s1.push(temp);
            s2.pop();
        }
        return;
    }
public:
    // Push element x to the back of queue.
    void push(int x) {
        if(s1.size() == 0) {
            s1.push(x);
        }
        else{
            move(s2,s1);
            s1.push(x);
            move(s1,s2);
        }
    }

    // Removes the element from in front of queue.
    void pop(void) {
        s1.pop();
    }

    // Get the front element.
    int peek(void) {
        return s1.top();
    }

    // Return whether the queue is empty.
    bool empty(void) {
        return s1.empty();
    }
};
