class Solution {
public:
    vector<int> findMinHeightTrees(int n, vector<pair<int, int>>& edges) {
        vector<int> degree(n, 0);
        vector<vector<int> > graph(n, vector<int>());
        for(int i = 0; i < edges.size(); ++i) {
            graph[edges[i].first].push_back(edges[i].second);
            graph[edges[i].second].push_back(edges[i].first);
            degree[edges[i].first]++;
            degree[edges[i].second]++;
        }
        
        int count = n;
        while(count > 2) {
            vector<int> del;
            for(int i = 0; i < n; ++i) {
                if(degree[i] == 1){
                    del.push_back(i);
                    degree[i] = -1;
                    count--;
                }
            }
            for(int i = 0; i < del.size(); ++i) {
                for(int j = 0; j < graph[del[i]].size(); ++j) {
                    degree[graph[del[i]][j]]--;
                }
            }
        }
        vector<int> res;
        for(int i = 0; i < n; ++i) {
            if(degree[i] == 1 || degree[i] == 0){
                res.push_back(i);
            }
        }
        return res;
    }
};
